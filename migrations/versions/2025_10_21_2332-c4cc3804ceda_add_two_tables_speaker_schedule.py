"""Add two tables: speaker, schedule

Revision ID: c4cc3804ceda
Revises: 08dc2023813d
Create Date: 2025-10-21 23:32:07.038551

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c4cc3804ceda"
down_revision: Union[str, None] = "08dc2023813d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "speaker",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("photo_url", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("instagram_link", sa.String(), nullable=True),
        sa.Column("x_link", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_keynote_speaker", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_speaker_id"), "speaker", ["id"], unique=False, schema="public"
    )
    op.create_table(
        "schedule",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("topic", sa.String(), nullable=False),
        sa.Column("speaker_id", sa.UUID(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("stream_link", sa.String(), nullable=True),
        sa.Column("start", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["speaker_id"],
            ["public.speaker.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_schedule_id"), "schedule", ["id"], unique=False, schema="public"
    )
    op.create_index(
        op.f("ix_public_schedule_speaker_id"),
        "schedule",
        ["speaker_id"],
        unique=False,
        schema="public",
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_public_schedule_speaker_id"), table_name="schedule", schema="public"
    )
    op.drop_index(op.f("ix_public_schedule_id"), table_name="schedule", schema="public")
    op.drop_table("schedule", schema="public")
    op.drop_index(op.f("ix_public_speaker_id"), table_name="speaker", schema="public")
    op.drop_table("speaker", schema="public")
    # ### end Alembic commands ###
