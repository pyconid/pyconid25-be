"""update user table add country_id state_id city_id foreign keys

Revision ID: e338d029d3e2
Revises: d607aac3bdda
Create Date: 2025-10-06 22:47:35.005077

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e338d029d3e2"
down_revision: Union[str, None] = "d607aac3bdda"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("country_id", sa.Integer(), nullable=True), schema="public"
    )
    op.add_column(
        "user", sa.Column("state_id", sa.Integer(), nullable=True), schema="public"
    )
    op.add_column(
        "user", sa.Column("city_id", sa.Integer(), nullable=True), schema="public"
    )
    op.create_index(
        op.f("ix_public_user_country_id"),
        "user",
        ["country_id"],
        unique=False,
        schema="public",
    )
    op.create_index(
        op.f("ix_public_user_state_id"),
        "user",
        ["state_id"],
        unique=False,
        schema="public",
    )
    op.create_index(
        op.f("ix_public_user_city_id"),
        "user",
        ["city_id"],
        unique=False,
        schema="public",
    )
    op.create_foreign_key(
        "fk_user_country_id",
        "user",
        "country",
        ["country_id"],
        ["id"],
        source_schema="public",
        referent_schema="public",
    )
    op.create_foreign_key(
        "fk_user_state_id",
        "user",
        "state",
        ["state_id"],
        ["id"],
        source_schema="public",
        referent_schema="public",
    )
    op.create_foreign_key(
        "fk_user_city_id",
        "user",
        "city",
        ["city_id"],
        ["id"],
        source_schema="public",
        referent_schema="public",
    )
    op.drop_column("user", "country", schema="public")
    op.drop_column("user", "state", schema="public")
    op.drop_column("user", "city", schema="public")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("country", sa.String(), nullable=True), schema="public"
    )
    op.add_column(
        "user", sa.Column("state", sa.String(), nullable=True), schema="public"
    )
    op.add_column(
        "user", sa.Column("city", sa.String(), nullable=True), schema="public"
    )
    op.drop_constraint("fk_user_city_id", "user", type_="foreignkey", schema="public")
    op.drop_constraint("fk_user_state_id", "user", type_="foreignkey", schema="public")
    op.drop_constraint(
        "fk_user_country_id", "user", type_="foreignkey", schema="public"
    )
    op.drop_index(op.f("ix_public_user_city_id"), table_name="user", schema="public")
    op.drop_index(op.f("ix_public_user_state_id"), table_name="user", schema="public")
    op.drop_index(op.f("ix_public_user_country_id"), table_name="user", schema="public")
    op.drop_column("user", "city_id", schema="public")
    op.drop_column("user", "state_id", schema="public")
    op.drop_column("user", "country_id", schema="public")
