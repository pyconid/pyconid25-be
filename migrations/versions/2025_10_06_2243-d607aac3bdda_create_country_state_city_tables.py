"""create country state city tables

Revision ID: d607aac3bdda
Revises: d35d4a05583d
Create Date: 2025-10-06 22:43:57.178314

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d607aac3bdda"
down_revision: Union[str, None] = "d35d4a05583d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "country",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("iso3", sa.String(length=3), nullable=True),
        sa.Column("iso2", sa.String(length=2), nullable=True),
        sa.Column("numeric_code", sa.String(length=3), nullable=True),
        sa.Column("phone_code", sa.String(length=255), nullable=True),
        sa.Column("capital", sa.String(length=255), nullable=True),
        sa.Column("currency", sa.String(length=255), nullable=True),
        sa.Column("currency_name", sa.String(length=255), nullable=True),
        sa.Column("currency_symbol", sa.String(length=255), nullable=True),
        sa.Column("tld", sa.String(length=255), nullable=True),
        sa.Column("native", sa.String(length=255), nullable=True),
        sa.Column("region", sa.String(length=255), nullable=True),
        sa.Column("subregion", sa.String(length=255), nullable=True),
        sa.Column("nationality", sa.String(length=255), nullable=True),
        sa.Column("timezones", sa.JSON(), nullable=True),
        sa.Column("translations", sa.JSON(), nullable=True),
        sa.Column("latitude", sa.String(length=20), nullable=True),
        sa.Column("longitude", sa.String(length=20), nullable=True),
        sa.Column("emoji", sa.String(length=191), nullable=True),
        sa.Column("emojiU", sa.String(length=191), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_country_id"), "country", ["id"], unique=False, schema="public"
    )
    op.create_index(
        op.f("ix_public_country_iso2"),
        "country",
        ["iso2"],
        unique=False,
        schema="public",
    )
    op.create_index(
        op.f("ix_public_country_name"),
        "country",
        ["name"],
        unique=False,
        schema="public",
    )
    op.create_table(
        "state",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("country_code", sa.String(length=2), nullable=True),
        sa.Column("fips_code", sa.String(length=255), nullable=True),
        sa.Column("iso2", sa.String(length=255), nullable=True),
        sa.Column("type", sa.String(length=191), nullable=True),
        sa.Column("latitude", sa.String(length=20), nullable=True),
        sa.Column("longitude", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["public.country.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_state_country_id"),
        "state",
        ["country_id"],
        unique=False,
        schema="public",
    )
    op.create_index(
        op.f("ix_public_state_id"), "state", ["id"], unique=False, schema="public"
    )
    op.create_index(
        op.f("ix_public_state_name"), "state", ["name"], unique=False, schema="public"
    )
    op.create_table(
        "city",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("state_code", sa.String(length=255), nullable=True),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("country_code", sa.String(length=2), nullable=True),
        sa.Column("latitude", sa.String(length=20), nullable=True),
        sa.Column("longitude", sa.String(length=20), nullable=True),
        sa.Column("wikiDataId", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["public.country.id"],
        ),
        sa.ForeignKeyConstraint(
            ["state_id"],
            ["public.state.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_city_country_id"),
        "city",
        ["country_id"],
        unique=False,
        schema="public",
    )
    op.create_index(
        op.f("ix_public_city_id"), "city", ["id"], unique=False, schema="public"
    )
    op.create_index(
        op.f("ix_public_city_name"), "city", ["name"], unique=False, schema="public"
    )
    op.create_index(
        op.f("ix_public_city_state_id"),
        "city",
        ["state_id"],
        unique=False,
        schema="public",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_public_city_state_id"), table_name="city", schema="public")
    op.drop_index(op.f("ix_public_city_name"), table_name="city", schema="public")
    op.drop_index(op.f("ix_public_city_id"), table_name="city", schema="public")
    op.drop_index(op.f("ix_public_city_country_id"), table_name="city", schema="public")
    op.drop_table("city", schema="public")
    op.drop_index(op.f("ix_public_state_name"), table_name="state", schema="public")
    op.drop_index(op.f("ix_public_state_id"), table_name="state", schema="public")
    op.drop_index(
        op.f("ix_public_state_country_id"), table_name="state", schema="public"
    )
    op.drop_table("state", schema="public")
    op.drop_index(op.f("ix_public_country_name"), table_name="country", schema="public")
    op.drop_index(op.f("ix_public_country_iso2"), table_name="country", schema="public")
    op.drop_index(op.f("ix_public_country_id"), table_name="country", schema="public")
    op.drop_table("country", schema="public")
    # ### end Alembic commands ###
